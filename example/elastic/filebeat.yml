nuix.logdir: C:\Users\*\AppData\Local\Nuix
automation.logdir: C:\log
automation.logdir2: C:\log1

filebeat.inputs:

- type: log
  paths:
     - ${nuix.logdir}\Logs\*\nuix.log
  include_lines: ['-\s*S\s*T\s*A\s*R\s*T\s*I\s*N\s*G\s*R\s*U\s*N\s*N\s*E\s*R']
  tags: ["NUIX-RUNNER-START" ,"CASE-TRIGGER"]
  scan_frequency: 5s

- type: log
  paths:
     - ${nuix.logdir}\Logs\*\nuix.log
  include_lines: ['-\s*F\s*I\s*N\s*I\s*S\s*H\s*E\s*D\s*R\s*U\s*N\s*N\s*E\s*R']
  tags: ["NUIX-RUNNER-END" ,"CASE-TRIGGER"]
  scan_frequency: 5s

- type: log
  paths:
     - ${nuix.logdir}\Logs\*\nuix.log
  include_lines: ['-\s*i\s*t\s*e\s*m\s*p\s*r\s*o\s*c\s*e\s*s\s*s\s*e\s*d\s*:']
  tags: ["NUIX-MAIN-LOG-INFO" ,"AUTOMATION-CASE-ITEM"]
  scan_frequency: 5s

- type: log
  paths:
     - ${nuix.logdir}\Logs\*\nuix.log
  include_lines: ['ERROR']
  tags: ["NUIX-MAIN-LOG-ERROR"]
  multiline.type: pattern
  multiline.pattern: '^[[:space:]]+(at|\.{3})[[:space:]]+\b|^Caused by:|^com|^java'
  multiline.negate: false
  multiline.match: after
  scan_frequency: 5s

- type: log
  paths:
     - ${nuix.logdir}\Logs\*\nuix.log

  include_lines: ['WARN']
  tags: ["NUIX-MAIN-LOG-WARN"]
  multiline.type: pattern
  multiline.pattern: '^[[:space:]]+(at|\.{3})[[:space:]]+\b|^Caused by:|^com|^java'
  multiline.negate: false
  multiline.match: after
  scan_frequency: 5s

- type: log
  paths:
     - ${nuix.logdir}\Logs\*\nuix.log
  include_lines: ['INFO']
  exclude_lines: ['-\s*S\s*T\s*A\s*R\s*T\s*I\s*N\s*G\s*R\s*U\s*N\s*N\s*E\s*R']
  exclude_lines: ['-\s*F\s*I\s*N\s*I\s*S\s*H\s*E\s*D\s*R\s*U\s*N\s*N\s*E\s*R']
  exclude_lines: ['-\s*i\s*t\s*e\s*m\s*p\s*r\s*o\s*c\s*e\s*s\s*s\s*e\s*d\s*:']
  tags: ["NUIX-MAIN-LOG-INFO"]
  multiline.type: pattern
  multiline.pattern: '^[[:space:]]+(at|\.{3})[[:space:]]+\b|^Caused by:|^com|^java'
  multiline.negate: false
  multiline.match: after
  scan_frequency: 5s

- type: log
  paths:
     - ${nuix.logdir}\Logs\*\*\*\nuix.log
  include_lines: ['ERROR']
  tags: ["NUIX-WORKER-LOG-ERROR"]
  multiline.type: pattern
  multiline.pattern: '^[[:space:]]+(at|\.{3})[[:space:]]+\b|^Caused by:|^com|^java'
  multiline.negate: false
  multiline.match: after
  scan_frequency: 5s

- type: log
  paths:
     - ${nuix.logdir}\Logs\*\*\*\nuix.log
  include_lines: ['WARN ']
  tags: ["NUIX-WORKER-LOG-WARN"]
  multiline.type: pattern
  multiline.pattern: '^[[:space:]]+(at|\.{3})[[:space:]]+\b|^Caused by:|^com|^java'
  multiline.negate: false
  multiline.match: after
  scan_frequency: 5s

- type: log
  paths:
     - ${nuix.logdir}\Logs\*\*\*\nuix.log
  include_lines: ['INFO']
  tags: ["NUIX-WORKER-LOG-INFO"]
  multiline.type: pattern
  multiline.pattern: '^[[:space:]]+(at|\.{3})[[:space:]]+\b|^Caused by:|^com|^java'
  multiline.negate: false
  multiline.match: after
  scan_frequency: 5s

- type: log
  paths:
     - ${nuix.logdir}\Logs\*\*\*\ocr.log
  tags: ["OCR-LOG"]
  scan_frequency: 10s


- type: log
  paths:
     - ${nuix.logdir}\Logs\*\*\*\abby*.log
  tags: ["ABBY-WORKER-LOG"]
  scan_frequency: 5s

- type: log
  paths:
     - ${automation.logdir}\*.log
     - ${automation.logdir2}\*.log
  include_lines: ['"\s*[Pp]\s*[Rr]\s*[Oo]\s*[Cc]\s*[Ee]\s*[Ss]\s*[Ss]\s*[Ee]\s*[Dd]\s*[Ii]\s*[Tt]\s*[Ee]\s*[Mm]\s*"']
  tags: ["AUTOMATION", "AUTOMATION-CASE-ITEM"]
  scan_frequency: 1s
- type: log
  paths:
     - ${automation.logdir}\*.log
     - ${automation.logdir2}\*.log
  include_lines: ['[Ss]\s*[Tt]\s*[Aa]\s*[Rr]\s*[Tt]\s*[Ii]\s*[Nn]\s*[Gg]\s*[Rr]\s*[Uu]\s*[Nn]\s*[Nn]\s*[Ee]\s*[Rr]']
  tags: ["AUTOMATION", "AUTOMATION-STARTING-RUNNER"]
  scan_frequency: 1s

- type: log
  paths:
     - ${automation.logdir}\*.log
     - ${automation.logdir2}\*.log
  include_lines: ['[Ss]\s*[Tt]\s*[Aa]\s*[Rr]\s*[Tt]\s*[Ii]\s*[Nn]\s*[Gg]\s*[Ss]\s*[Tt]\s*[Aa]\s*[Gg]\s*[Ee]']
  tags: ["AUTOMATION", "AUTOMATION-STARTING-STAGE"]
  scan_frequency: 1s

- type: log
  paths:
     - ${automation.logdir}\*.log
     - ${automation.logdir2}\*.log
  include_lines: ['[Ff]\s*[Aa]\s*[Ii]\s*[Ll]\s*[Ee]\s*[Dd]\s*[Rr]\s*[Uu]\s*[Nn]\s*[Nn]\s*[Ee]\s*[Rr]']
  tags: ["AUTOMATION", "AUTOMATION-FAILED-RUNNER"]
  scan_frequency: 1s

- type: log
  paths:
     - ${automation.logdir}\*.log
     - ${automation.logdir2}\*.log
  include_lines: ['[Ff]\s*[Ii]\s*[Nn]\s*[Ii]\s*[Ss]\s*[Hh]\s*[Ee]\s*[Dd]\s*[Rr]\s*[Uu]\s*[Nn]\s*[Nn]\s*[Ee]\s*[Rr]']
  tags: ["AUTOMATION", "AUTOMATION-FINISHED-RUNNER"]
  scan_frequency: 1s

- type: log
  paths:
     - ${automation.logdir}\*.log
     - ${automation.logdir2}\*.log
  include_lines: ['[Ff]\s*[Aa]\s*[Ii]\s*[Ll]\s*[Ee]\s*[Dd]\s*[Ss]\s*[Tt]\s*[Aa]\s*[Gg]\s*[Ee]']
  tags: ["AUTOMATION", "AUTOMATION-FAILED-STAGE"]
  scan_frequency: 1s

- type: log
  paths:
     - ${automation.logdir}\*.log
     - ${automation.logdir2}\*.log
  include_lines: ['[Ff]\s*[Ii]\s*[Nn]\s*[Ii]\s*[Ss]\s*[Hh]\s*[Ee]\s*[Dd]\s*[Ss]\s*[Tt]\s*[Aa]\s*[Gg]\s*[Ee]']
  tags: ["AUTOMATION", "AUTOMATION-FINISHED-STAGE"]
  scan_frequency: 1s

- type: log
  paths:
     - ${automation.logdir}\*.log
     - ${automation.logdir2}\*.log
  exclude_lines: ['[Ff]\s*[Ii]\s*[Nn]\s*[Ii]\s*[Ss]\s*[Hh]\s*[Ee]\s*[Dd]\s*[Rr]\s*[Uu]\s*[Nn]\s*[Nn]\s*[Ee]\s*[Rr]']
  exclude_lines: ['[Ss]\s*[Tt]\s*[Aa]\s*[Rr]\s*[Tt]\s*[Ii]\s*[Nn]\s*[Gg]\s*[Rr]\s*[Uu]\s*[Nn]\s*[Nn]\s*[Ee]\s*[Rr]']
  exclude_lines: ['[Ss]\s*[Tt]\s*[Aa]\s*[Rr]\s*[Tt]\s*[Ii]\s*[Nn]\s*[Gg]\s*[Ss]\s*[Tt]\s*[Aa]\s*[Gg]\s*[Ee]']
  exclude_lines: ['[Ff]\s*[Aa]\s*[Ii]\s*[Ll]\s*[Ee]\s*[Dd]\s*[Ss]\s*[Tt]\s*[Aa]\s*[Gg]\s*[Ee]']
  exclude_lines: ['[Ff]\s*[Ii]\s*[Nn]\s*[Ii]\s*[Ss]\s*[Hh]\s*[Ee]\s*[Dd]\s*[Ss]\s*[Tt]\s*[Aa]\s*[Gg]\s*[Ee]']
  exclude_lines: ['[Ff]\s*[Aa]\s*[Ii]\s*[Ll]\s*[Ee]\s*[Dd]\s*[Rr]\s*[Uu]\s*[Nn]\s*[Nn]\s*[Ee]\s*[Rr]']
  exclude_lines: ['"\s*[Pp]\s*[Rr]\s*[Oo]\s*[Cc]\s*[Ee]\s*[Ss]\s*[Ss]\s*[Ee]\s*[Dd]\s*[Ii]\s*[Tt]\s*[Ee]\s*[Mm]\s*"']
  tags: ["AUTOMATION"]
  scan_frequency: 1s

filebeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.enabled: false

setup.template.settings:
  index.number_of_shards: 1

setup.kibana:
  host: "172.16.85.248:5601"


#output.elasticsearch:
#  hosts: ["172.16.85.248:9200"]

output.logstash:
  hosts: ["localhost:5044"]


processors:
- decode_json_fields:
    when:
     contains:
       tags: "AUTOMATION"
    fields: ['message']
    process_array: true
    max_depth: 20
    target: "automation"
    overwrite_keys: true

- add_fields:
    when:
      contains:
        log.flags: "multiline"
    target: "nuix"
    fields:
      multiline: "MULTILINE"
- add_tags:
    when:
      contains:
        log.flags: "multiline"
    tags: ["MULTILINE"]
    target: ""

- add_locale:
    when:
     contains:
       tags: "AUTOMATION"
    format: abbreviation
- timestamp:
    when:
     contains:
       tags: "AUTOMATION"
    field: automation.ts
    layouts:
     - 'UNIX'
    target_field: automation.timestamp
